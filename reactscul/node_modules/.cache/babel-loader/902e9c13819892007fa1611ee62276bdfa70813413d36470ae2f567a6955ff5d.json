{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactScul\\\\reactscul\\\\src\\\\components\\\\note.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Note = ({\n  title,\n  description\n}) => {\n  _s();\n  const {\n    showDescription,\n    setshowDescription\n  } = useState();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Note, \"+OlPqolfeIoCYe2rWjK2jkagrok=\");\n_c = Note;\nexport default Note;\nvar _c;\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Note","title","description","_s","showDescription","setshowDescription","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ReactScul/reactscul/src/components/note.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst Note = ({ title, description }) => {\r\n  const { showDescription, setshowDescription } = useState();\r\n  return (\r\n    <>\r\n      <h2>{title}</h2>\r\n\r\n      <p>{description}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjC,MAAMC,IAAI,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM;IAAEC,eAAe;IAAEC;EAAmB,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAC1D,oBACEE,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAKL;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEhBb,OAAA;MAAAS,QAAA,EAAIJ;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eACpB,CAAC;AAEP,CAAC;AAACP,EAAA,CATIH,IAAI;AAAAW,EAAA,GAAJX,IAAI;AAWV,eAAeA,IAAI;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}